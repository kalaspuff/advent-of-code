[tool.poetry]
name = "advent-of-code"
version = "2023.12"
description = "My solutions to some of the \"Advent of Code\" programming puzzles."
authors = ["Carl Oscar Aaro <hello@carloscar.com>"]
packages = [
    { include = "cli.py" },
]

[tool.poetry.dependencies]
python = "^3.11"
prompt_toolkit = "^3.0.36"
utcnow = "^0.3.8"

[tool.poetry.scripts]
advent-of-code = "cli:main"
advent = "cli:main"
aoc = "cli:main"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target_version = ["py311"]
exclude = '\.eggs/|\.git/|\.mypy_cache/|\.venv/|\.pytest_cache/|\.vscode/|__pycache__/|build/|dist/|setup\.py'

[tool.isort]
profile = "black"
line_length = 120
known_first_party = ["helpers", "matrix", "values"]
skip = [".mypy_cache", ".pytest_cache", "__pycache__", ".eggs", ".git", ".venv", ".vscode", "build", "dist", "tmp"]

[tool.ruff]
line-length = 120
target-version = "py311"
select = [
    "F", # pyflakes
    "E", # pycodestyle (erorr)
    "I", # isort
    "W", # pycodestyle (warning)
    "C901", # complex-structure
    "UP", # pyupgrade
    "N", # pep8-naming
    "B", # flake8-bugbear
    "DTZ", # flake8-datetimez
    "Q", # flake8-quotes
    "T20", # flake8-print
    "PL", # pylint
    "PIE", # flake8-pie
    "RET", # flake8-return
    "SLF", # flake8-self
    "SIM", # flake8-simplify
    "PGH", # pygrep-hooks
    "RUF", # ruff-specific
    "PT", # flake8-pytest-style
    "C4", # flake8-comprehensions
    "A", # flake8-builtins
]
ignore = [
    "UP007", # union type annotations
    "T201", # print
    "B007", # unused variable within loop
    "B023", # loop variable
    "UP038", # union type annotations
    "E731", # lambda
    "PLR2004", # magic value comparison
    "SLF001", # private value accessed
    "B905", # zip without strict
    "B010", # setattr without constant
    "C416", # unnecessary list comprehension
    "A003", # builtin shadowing
    "C901", # complex structure
    "PLR0912", # function complexity
    "PLR0915", # function complexity
    "UP035", # import from collections.abc instead
]
src = [
    "*.py",
    "year*",
    "year*/day*",
    "tests",
]

[tool.ruff.per-file-ignores]
"tests/*.py" = [
    "S101", # assert
    "PLR2004", # magic-value-comparison
]
